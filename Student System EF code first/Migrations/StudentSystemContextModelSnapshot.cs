// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

namespace Student_System_EF_code_first.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    partial class StudentSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new { CourseId = 1, EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Biology", Price = 560m, StartDate = new DateTime(2019, 6, 13, 12, 3, 25, 380, DateTimeKind.Local) },
                        new { CourseId = 2, EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Astronomy", Price = 400m, StartDate = new DateTime(2019, 6, 13, 12, 3, 25, 380, DateTimeKind.Local) },
                        new { CourseId = 3, EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "History", Price = 360m, StartDate = new DateTime(2019, 6, 13, 12, 3, 25, 380, DateTimeKind.Local) },
                        new { CourseId = 4, EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Geography", Price = 453m, StartDate = new DateTime(2019, 6, 13, 12, 3, 25, 380, DateTimeKind.Local) },
                        new { CourseId = 5, EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Archeology", Price = 250m, StartDate = new DateTime(2019, 6, 13, 12, 3, 25, 380, DateTimeKind.Local) },
                        new { CourseId = 6, EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Chemistry", Price = 650m, StartDate = new DateTime(2019, 6, 13, 12, 3, 25, 380, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsUnicode(false);

                    b.Property<int>("ContentType");

                    b.Property<int>("CourseId");

                    b.Property<int>("StudentId");

                    b.Property<DateTime>("SubmissionTime");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Homeworks");
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<int>("ResourceType");

                    b.Property<string>("Url")
                        .IsUnicode(false);

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("CHAR(10)");

                    b.Property<DateTime>("RegisteredOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new { StudentId = 1, Name = "Pesho", PhoneNumber = "088433243", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 376, DateTimeKind.Local) },
                        new { StudentId = 2, Name = "Gosho", PhoneNumber = "0883434323", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 379, DateTimeKind.Local) },
                        new { StudentId = 3, Name = "Sasho", PhoneNumber = "088433243", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 379, DateTimeKind.Local) },
                        new { StudentId = 4, Name = "Nedko", PhoneNumber = "087654323", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 379, DateTimeKind.Local) },
                        new { StudentId = 5, Name = "Sashka", PhoneNumber = "088412344", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 379, DateTimeKind.Local) },
                        new { StudentId = 6, Name = "Penka", PhoneNumber = "088340023", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 379, DateTimeKind.Local) },
                        new { StudentId = 7, Name = "Ivanka", PhoneNumber = "088433200", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 379, DateTimeKind.Local) },
                        new { StudentId = 8, Name = "Munio", PhoneNumber = "088114323", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 379, DateTimeKind.Local) },
                        new { StudentId = 9, Name = "Angel", PhoneNumber = "08811003", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 379, DateTimeKind.Local) },
                        new { StudentId = 10, Name = "Mitko", PhoneNumber = "080033432", RegisteredOn = new DateTime(2019, 6, 13, 12, 3, 25, 379, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("CourseId");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("StudentsEnrolled")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
